/*
   * Flattens a rule set into valid CSS
   * Hashes it, wraps the whole chunk in a .hash1234 {}
   * Returns the hash to be injected on render()
   * */

/*
 ComponentStyle is all the CSS-specific stuff, not
 the React-specific stuff.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* 0 */

/* 1 */

/* 10 */

/* 11 */

/* 12 */

/* 13 */

/* 14 */

/* 15 */

/* 16 */

/* 17 */

/* 18 */

/* 19 */

/* 2 */

/* 20 */

/* 21 */

/* 22 */

/* 23 */

/* 24 */

/* 25 */

/* 26 */

/* 27 */

/* 28 */

/* 29 */

/* 3 */

/* 30 */

/* 31 */

/* 32 */

/* 33 */

/* 34 */

/* 35 */

/* 36 */

/* 37 */

/* 38 */

/* 39 */

/* 4 */

/* 40 */

/* 41 */

/* 42 */

/* 43 */

/* 44 */

/* 45 */

/* 46 */

/* 47 */

/* 48 */

/* 49 */

/* 5 */

/* 50 */

/* 51 */

/* 52 */

/* 6 */

/* 7 */

/* 8 */

/* 9 */

/* @import rules are reordered to appear first */

/* Append to target when no previous element was passed */

/* Either execute or defer the function */

/* Firefox quirk requires us to step through all stylesheets to find one owned by the given tag */

/* Handle objects */

/* Handle other components */

/* If config methods are called, wrap up a new template function and merge options */

/* Insert new style tag after the previous one */

/* Modify/inject new props at runtime */

/* NOTE: This is just for backwards-compatibility with jest-styled-components */

/* Remove sealed StyleSheets from the master sheet */

/* The master sheet might be reset, so keep a reference here */

/* These are helpers for the StyleTags to keep track of the injected
 * rule names for each (component) ID that they're keeping track of.
 * They're crucial for detecting whether a name has already been
 * injected.
 * (This excludes rehydrated names) */

/* This is callable directly as a template function */

/* This is the "capacity" of our alphabet i.e. 2x26 for all letters plus their capitalised
 * counterparts */

/* WEBPACK VAR INJECTION */

/* We depend on components having unique IDs */

/* Work around insertRule quirk in EdgeHTML */

/* Z+1 */

/* a list of tags belonging to this StyleSheet */

/* a map from ids to tags */

/* a tag for import rules */

/* abort early if cssRule string is falsy */

/* abort rehydration if no previous style tags were found */

/* abort rehydration if nothing was extracted */

/* add all extracted components to the new tag */

/* add deferred rules for component */

/* add rehydrated name to sheet to avoid re-adding styles */

/* add to clone array */

/* add up no of injected rules */

/* adds "children" to the StyleSheet that inherit all of the parents' rules
   * while their own rules do not affect the parent */

/* adds a new ID:name pairing to a names dictionary */

/* any error indicates an invalid rule */

/* binding */

/* caching layer checking id+name to already have a corresponding tag and injected rules */

/* check if style tag is a streamed tag */

/* children (aka clones) of this StyleSheet inheriting all and future injections */

/* clone all tags */

/* clone other maps */

/* combines hashStr (murmurhash) and nameGenerator for convenience */

/* create a tag to be used for rehydration */

/* create new empty text node and replace the current one */

/* current capacity until a new tag must be created */

/* deferred rules for a given id */

/* delete possible deferred rules */

/* don't inject when the id is already registered */

/* eslint-disable camelcase, no-undef */

/* eslint-disable guard-for-in */

/* eslint-disable no-bitwise */

/* eslint-disable no-unused-vars */

/* eslint-disable react/prop-types, flowtype-errors/show-errors */

/* eslint-disable-next-line jsx-a11y/anchor-has-content */

/* eslint-enable */

/* exception for rehydrated names which are checked separately */

/* extract all components and their CSS */

/* fail silently */

/* force StyleSheet to create a new tag on the next injection */

/* get a char and divide by alphabet-length */

/* get a tag for a given componentId, assign the componentId to one, or shard */

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */

/* harmony default export */

/* harmony export (binding) */

/* harmony import */

/* ignore possible rehydrated names */

/* in speedy mode we can keep a lot more rules in a sheet before a slowdown can be expected */

/* injects rules for a given id with a name that will need to be cached */

/* input a number, usually a hash and convert it to base-52 */

/* mainly for createGlobalStyle to check for its id */

/* n */

/* o */

/* reconstruct tagMap */

/* registers a componentId and registers it on its tag */

/* rehydrate all SSR'd style tags */

/* remove all rules from the tag */

/* remove old HTMLStyleElements, since they have been rehydrated */

/* removes all rules for a given id, which doesn't remove its marker but resets it */

/* reset capacity and adjust MAX_SIZE by the initial size of the rehydration */

/* reset the internal "master" instance */

/* retrieve a "master" instance of StyleSheet which is typically used when no other is available
   * The master StyleSheet is targeted by createGlobalStyle, keyframes, and components outside of any
    * StyleSheetManager's context */

/* retrieve all component ids */

/* retrieve all component names */

/* shard (create a new tag) if the tag is exhausted (See MAX_SIZE) */

/* simply return a tag, when the componentId was already assigned one */

/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */

/* store original HTMLStyleElement */

/* this is used for not reinjecting rules via hasNameForId() */

/* unused harmony export MemoryRouter */

/* unused harmony export Prompt */

/* unused harmony export Redirect */

/* unused harmony export ServerStyleSheet */

/* unused harmony export StaticRouter */

/* unused harmony export StyleSheetConsumer */

/* unused harmony export StyleSheetContext */

/* unused harmony export StyleSheetManager */

/* unused harmony export ThemeConsumer */

/* unused harmony export ThemeContext */

/* unused harmony export __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS */

/* unused harmony export __HistoryContext */

/* unused harmony export css */

/* unused harmony export generatePath */

/* unused harmony export isStyledComponent */

/* unused harmony export keyframes */

/* unused harmony export useHistory */

/* unused harmony export useLocation */

/* unused harmony export useParams */

/* unused harmony export useRouteMatch */

/* unused harmony export withRouter */

/* unused harmony export withTheme */

/* use insertRule and cap passed index with maxIndex (no of cssRules) */

/* we should always be able to find a tag */

/* when rules for an id are removed using remove() we have to ignore rehydratedNames for it */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

/*#__PURE__*/

/**
       * Depending on the order "render" is called this can cause the styles to be lost
       * until the next render pass of the remaining instance, which may
       * not be immediate.
       */

/**
       * This fixes HMR compatibility. Don't ask me why, but this combination of
       * caching the closure variables via statics and then persisting the statics in
       * state works across HMR where no other combination did. ¯\_(ツ)_/¯
       */

/**
   * Get the theme from the props, supporting both (outerTheme) => {}
   * as well as object notation
   */

/**
   * Mark the ServerStyleSheet as being fully emitted and manually GC it from the
   * StyleSheet singleton.
   */

/**
   * This ensures uniqueness if two components happen to share
   * the same displayName.
   */

/**
 * A <Link> wrapper that knows if it's "active" or not.
 */

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/**
 * Create an error file out of errors.md for development and a simple web link to the full errors
 * in production mode.
 */

/**
 * Creates a history object that stores locations in memory.
 */

/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */

/**
 * Expose `pathToRegexp`.
 */

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */

/**
 * Expose a method for transforming tokens into the path function.
 */

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */

/**
 * It's falsish not falsy because 0 is allowed.
 */

/**
 * Merge anything recursively.
 * Objects get merged, special objects (classes etc.) are re-assigned "as is".
 * Basic types overwrite objects or other basic types.
 *
 * @param {(IConfig | any)} origin
 * @param {...any[]} newComers
 * @returns the result
 */

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Public API for matching a URL pathname to a path.
 */

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */

/**
 * Returns the object type of the given payload
 *
 * @param {*} payload
 * @returns {string}
 */

/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

/**
 * Returns true whether the payload is null or undefined
 *
 * @param {*} payload
 * @returns {(payload is null | undefined)}
 */

/**
 * Returns whether the payload is a Date, and that the date is valid
 *
 * @param {*} payload
 * @returns {payload is Date}
 */

/**
 * Returns whether the payload is a Symbol
 *
 * @param {*} payload
 * @returns {payload is symbol}
 */

/**
 * Returns whether the payload is a an array with at least 1 item
 *
 * @param {*} payload
 * @returns {payload is any[]}
 */

/**
 * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)
 *
 * @param {*} payload
 * @returns {payload is PlainObject}
 */

/**
 * Returns whether the payload is an array
 *
 * @param {any} payload
 * @returns {payload is any[]}
 */

/**
 * Returns whether the payload is null
 *
 * @param {*} payload
 * @returns {payload is null}
 */

/**
 * Returns whether the payload is undefined
 *
 * @param {*} payload
 * @returns {payload is undefined}
 */

/**
 * TODO: Explore using CSS.escape when it becomes more available
 * in evergreen browsers.
 */

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */

/**
 * The public API for a <Router> that stores location in memory.
 */

/**
 * The public API for a <Router> that uses window.location.hash.
 */

/**
 * The public API for matching a single path and rendering.
 */

/**
 * The public API for prompting the user before navigating away from a screen.
 */

/**
 * The public API for rendering a history-aware <a>.
 */

/**
 * The public API for rendering the first <Route> that matches.
 */

/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.14.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.14.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @type {!Array} */

/** @type {!Object} */

/** @type {string} */

/************************************************************************/

/******/

/***/

//

// 

// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]

// "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]

// "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]

// $FlowFixMe

// $FlowFixMe: Not typed to avoid destructuring arguments

// @font-face, @page

// @import

// @ts-ignore

// A hashchange doesn't always == location change.

// About 1.5x faster than the two-arg version of Array#splice()

// Any pre-mount location changes have been captured at

// Avoid failures from read-only properties

// By explicitly using `prop-types` you are opting into new production behavior.

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js

// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js

// CONCATENATED MODULE: ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js

// CONCATENATED MODULE: ./node_modules/history/esm/history.js

// CONCATENATED MODULE: ./node_modules/is-what/dist/index.esm.js

// CONCATENATED MODULE: ./node_modules/merge-anything/dist/index.esm.js

// CONCATENATED MODULE: ./node_modules/resolve-pathname/esm/resolve-pathname.js

// CONCATENATED MODULE: ./node_modules/value-equal/esm/value-equal.js

// CONCATENATED MODULE: ./src/components/App/index.jsx

// CONCATENATED MODULE: ./src/components/App/styled.js

// CONCATENATED MODULE: ./src/components/ControlPanel/CC/index.jsx

// CONCATENATED MODULE: ./src/components/ControlPanel/FC/index.jsx

// CONCATENATED MODULE: ./src/components/Display/CC/index.jsx

// CONCATENATED MODULE: ./src/components/Display/FC/index.jsx

// CONCATENATED MODULE: ./src/components/Display/styled.js

// CONCATENATED MODULE: ./src/components/ErrorBoundary/index.jsx

// CONCATENATED MODULE: ./src/components/Header/config.js

// CONCATENATED MODULE: ./src/components/Header/index.jsx

// CONCATENATED MODULE: ./src/components/History/CC/index.jsx

// CONCATENATED MODULE: ./src/components/History/FC/index.jsx

// CONCATENATED MODULE: ./src/components/History/styled.js

// CONCATENATED MODULE: ./src/components/Keypad/CC/index.jsx

// CONCATENATED MODULE: ./src/components/Keypad/FC/index.jsx

// CONCATENATED MODULE: ./src/components/NotFound/index.jsx

// CONCATENATED MODULE: ./src/components/ThemeChanger/index.jsx

// CONCATENATED MODULE: ./src/constants/calculator.js

// CONCATENATED MODULE: ./src/constants/routerPaths.js

// CONCATENATED MODULE: ./src/constants/themeContext.js

// CONCATENATED MODULE: ./src/containers/Calculator/CC/index.jsx

// CONCATENATED MODULE: ./src/containers/Calculator/FC/index.jsx

// CONCATENATED MODULE: ./src/containers/Calculator/styled.js

// CONCATENATED MODULE: ./src/hooks/useCalculatorValues.js

// CONCATENATED MODULE: ./src/index.js

// CONCATENATED MODULE: ./src/pages/Home/CC/index.jsx

// CONCATENATED MODULE: ./src/pages/Home/FC/index.jsx

// CONCATENATED MODULE: ./src/pages/Settings/index.jsx

// CONCATENATED MODULE: ./src/pages/Settings/styled.js

// CONCATENATED MODULE: ./src/styles/theme.js

// CONCATENATED MODULE: ./src/utils/Calculator/CalculatorCommands/AbsCommand.js

// CONCATENATED MODULE: ./src/utils/Calculator/CalculatorCommands/AddCommand.js

// CONCATENATED MODULE: ./src/utils/checkBracesIsValid.js

// CONCATENATED MODULE: ./src/utils/clearCalculatorData.js

// CONCATENATED MODULE: ./src/utils/getStartValue.js

// CONCATENATED MODULE: ./src/utils/handleCalcValue.js

// CONCATENATED MODULE: ./src/utils/index.js

// CONCATENATED MODULE: ./src/utils/onCalcButtonClick.js

// Check if module is in cache

// Combine passed cssRules with previously deferred CSS rules

// Compile all the patterns before compilation.

// Compile all the tokens into regexps.

// Create a new module (and put it into the cache)

// DCE check should happen before ReactDOM bundle executes so that

// Definitely a string, and a clone

// Detect buggy property enumeration order in older V8 versions.

// DevTools can report bad minification during injection.

// DevTools shouldn't crash React, no matter what.

// Don't pass through non HTML tags through to HTML elements

// ESM COMPAT FLAG

// EXPORTS

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/slicedToArray.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/toConsumableArray.js

// EXTERNAL MODULE: ./node_modules/react/index.js

// EXTERNAL MODULE: ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js

// Ensure the hash is encoded properly before doing anything else.

// Ensure we always have a properly-encoded hash.

// Execute the module function

// Flag the module as loaded

// Helper to call a given function, only once

// IE 11 sometimes throws when accessing window.history.state

// If the path exists, push it onto the end.

// Ignore already escaped sequences.

// Ignore extraneous popstate events in WebKit.

// Ignore this change; we already setState in push/replace.

// Important!

// In non-strict mode we allow a slash at the end of match. If the path to

// Inlined Object.is polyfill.

// Instead, we just default to 0 for keys we don't know.

// Instead, we just default to 0 for paths we don't know.

// Iterate over the tokens and create our regexp string.

// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

// Load entry module and return exports

// MIT License

// Match Express-style parameters and un-named parameters with a prefix

// Match any characters still remaining.

// Match escaped characters that would otherwise appear in future matches.

// Mimic the behavior of DOM histories by

// NOTE: We cannot mutate the deferred array itself as all clones

// No need to subscribe a static component to theme changes, it won't change anything

// Object.prototype.hasOwnProperty.call

// One-arg form: push(location)

// Otherwise, if either of them == null they are not equal.

// Preact uses an empty array as children by

// Prepend partial segment prefixes.

// Props should take precedence over ThemeProvider, which should take precedence over

// Public interface

// Push the current path onto the tokens.

// React 15 compat

// React v16.11 and below

// React v16.12 and above

// Resolve incomplete/relative pathname relative to current location.

// Return false from a transition hook to cancel the transition.

// Return the exports of the module

// SVG

// SVG-related properties

// See https://github.com/ReactTraining/history/pull/289

// Shorthands for all valid HTML Elements

// Some versions of I.E. have different rules for clearTimeout vs setTimeout

// Source: https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js

// TODO: If another transition starts while we're still confirming

// TODO: Replace with React.createContext once we can assume React 16+

// TODO: We could probably make this more reliable by

// TODO: overwrite in-place instead of remove+create?

// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js

// Test for strict equality first.

// Thanks to ReactDOMFactories for this handy list!

// The module cache

// The require function

// This allows the user to escape special characters that won't transform.

// This implementation is based heavily on node's url.parse

// This is a bit of a hack. We have to start listening for location

// This works if eval is allowed (see CSP)

// This works if the window reference is available

// This works in non-strict mode

// Two-arg form: push(path, state)

// UNUSED EXPORTS: concatArrays, merge

// UNUSED EXPORTS: parsePath

// Use a negative lookahead to match only capturing groups.

// Verify that the code above has been dead code eliminated (DCE'd).

// We can't use window.location.hash here because it's not

// We cannot tell if a hashchange was caused by a PUSH, so we'd

// We cannot tell if a hashchange was caused by a REPLACE, so we'd

// We don't expect any of the above to throw, but better to be safe.

// We return undefined, instead of nothing here, so it's

// We should still report in case we break this code.

// We use React.Children.forEach instead of React.Children.toArray().find()

// When newVal is an object do the merge recursively

// When there is no prior location and pathname is empty, set it to /

// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally

// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally

// __webpack_public_path__

// all SC-specific things should not be hoisted

// and optional suffixes. Matches appear as:

// and shouldn't be increasing the number of class names

// at-rule

// best way to handle this.

// but since JS is single=threaded, we can rely on that to ensure

// cached from whatever global is present so that test runners that stub it

// causing a render after a cancelled POP.

// changes here in the constructor in case there are any <Redirect>s

// component at different URLs.

// consistent across browsers - Firefox will pre-decode it!

// create a fake namespace object

// default, so use null if that's the case.

// defaultProps, but React automatically puts defaultProps on props.

// define __esModule on exports

// define getter function for harmony exports

// define newObject to merge all values upon

// do the same (see clones[i].inject)

// don't break things.  But we need to wrap it in a try catch in case it is

// don't hoist over string (html) components

// easier to handle this case. if(!global) { ...}

// empty string to avoid regexp issues

// eslint-disable-line no-alert

// eslint-disable-line no-new-wrappers

// eslint-disable-next-line guard-for-in

// eslint-disable-next-line guard-for-in, no-restricted-syntax

// eslint-disable-next-line no-param-reassign

// eslint-disable-next-line no-plusplus

// eslint-disable-next-line no-undef

// eslint-disable-next-line react/no-danger

// expose the module cache

// expose the modules object (__webpack_modules__)

// extend merge rules

// fold the underlying StyledComponent rules up (implicit extend)

// fold the underlying StyledComponent target up since we folded the styles

// function because try/catches deoptimize in certain engines.

// functions are allowed to be static if they're just being

// g can still be undefined, but nothing to do about it...

// get a new location before the <Router> is mounted.

// getDefaultExport function for compatibility with non-harmony modules

// here because toArray adds keys to all child elements and we do not want

// http://fb.me/prop-types-in-prod

// https://bugs.chromium.org/p/v8/issues/detail?id=3056

// https://bugs.chromium.org/p/v8/issues/detail?id=4118

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is

// https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133

// if clearTimeout wasn't available but was latter defined

// if setTimeout wasn't available but was latter defined

// ignore everything but left clicks

// in non-ending mode, where "/test/" shouldn't match "/test//route".

// is that other hash histories in the page will consider it a POP.

// is valid at the end of a path match, not in the middle. This is important

// keeping a list of keys we've seen in sessionStorage.

// keeping a list of paths we've seen in sessionStorage.

// match already ends with a slash, we remove it for consistency. The slash

// mode & 1: value is a module id, require it

// mode & 2: merge all properties of value into the ns

// mode & 4: return value when already ns object

// mode & 8|1: behave like require

// no consecutive self refs (.b.b); that is a precedence boost and treated differently

// on the initial render. If there are, they will replace/push when

// onClick prevented default

// place our cache into shared context so it'll persist between HMRs

// property

// rather setState here and ignore the hashchange. The caveat here

// re-define the origin and newComer as targetVal and newVal

// recursive case

// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error

// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.

// selector

// shim for using process in browser

// statically styled-components don't need to build an execution context object,

// stylis has no concept of state to be passed to plugins

// the first self-ref is always untouched

// the matched portion of the URL

// the path used to match

// the previous one, we may end up in a weird state. Figure out the

// there should be at least two self-refs to do a replacement (.b > .b)

// these properties stay in sync with the current stylis run

// they mount and since cDM fires in children before parents, we may

// this point, so unregister the listener.

// to is absolute

// to is relative, drop the filename

// to trigger an unmount/remount for two <Route>s that render the same

// used to get the classname of a nested styled component

// v8 likes predictible objects

// webpackBootstrap

// when when somebody has screwed with setTimeout but no I.E. maddness

// whether or not we matched exactly

// work directly on newComer if its not an object

// wrapped in strict mode code which doesn't define any globals.  It's inside a

//# sourceMappingURL=stylis.min.js.map

//normal enviroments in sane situations
